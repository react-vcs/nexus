// This is your Prisma schema file for MongoDB
// Learn more about MongoDB support here: https://pris.ly/d/prisma-mongodb

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// users Model
model users {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  email     String     @unique
  firstName String
  lastName  String
  mobile    String
  password  String
  otp       String     @default("0")
  comments  comments[]
  created   DateTime   @default(now())
  updated   DateTime   @updatedAt
}

// categories Model
model categories {
  id        String      @id @default(auto()) @map("_id") @db.ObjectId
  name      String      @unique
  news_list news_list[]
  created   DateTime    @default(now())
  updated   DateTime    @updatedAt
}

// news_list Model
model news_list {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  title      String
  short_des  String
  img1       String
  img2       String
  img3       String
  img4       String
  keywords   String
  long_des   String      @db.String
  type       String
  catID      String?     @db.ObjectId
  categories categories? @relation(fields: [catID], references: [id])
  comments   comments[]
  created    DateTime    @default(now())
  updated    DateTime    @updatedAt
}

// comments Model
model comments {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  userID       String?    @db.ObjectId
  users        users?     @relation(fields: [userID], references: [id])
  postID       String?    @db.ObjectId
  news_list    news_list? @relation(fields: [postID], references: [id])
  descriptions String
  created      DateTime   @default(now())
  updated      DateTime   @updatedAt
}

// socials Model
model socials {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  facebook String
  youtube  String
  twitter  String
  linkedin String
  about    String   @db.String
  address  String   @db.String
  created  DateTime @default(now())
  updated  DateTime @updatedAt
}

// subscribers Model
model subscribers {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  email   String   @unique
  created DateTime @default(now())
  updated DateTime @updatedAt
}

// policies Model
model policies {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  long_des String   @db.String
  type     String
  created  DateTime @default(now())
  updated  DateTime @updatedAt
}
